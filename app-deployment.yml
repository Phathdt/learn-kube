apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: default
  labels:
    app: app-deployment
spec:
  selector:
    matchLabels:
      app: app-deployment
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: app-deployment
    spec:
      containers:
        - name: app-deployment
          image: phathdt379/express-todo:1.3
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 100Mi
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_PORT
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: POSTGRESQL_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: POSTGRESQL_PASSWORD
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: pg-config
                  key: POSTGRESQL_DATABASE
          ports:
            - containerPort: 8080
              name: app-deployment
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: app-svc
  namespace: default
spec:
  selector:
    app: app-deployment
  type: LoadBalancer
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
    - name: app-svc
      protocol: TCP
      port: 80
      targetPort: 8080
